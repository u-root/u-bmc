version: 2
workflows:
  version: 2
  build_and_test:
    jobs:
      - clean-code
      - test:
          requires:
            - clean-code
      - race:
          requires:
            - clean-code
      - compile:
          requires:
            - clean-code
      - image:
          requires:
            - clean-code
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - compile
      - image
#TODO: Utilize CircleCI caching for at least the kernel tarball
jobs:
  clean-code:
    docker:
      - image: cimg/go:1.16.7
    working_directory: ~/go/src/github.com/u-root/u-bmc
    environment:
      - CGO_ENABLED: 0
    steps:
      - checkout
      - run:
          name: Install ineffassign
          command: go get github.com/gordonklaus/ineffassign
      - run:
          name: Install Task
          command: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin
      - run:
          name: Create test key
          command: |
            ssh-keygen -t rsa -b 4096 -C "testkey" -N "testpass" -f config/ssh_keys
            touch i_agree_to_the_acme_terms
            echo quanta-f06-leopard-ddr3 > TARGET
            task config:generate
      - run:
          name: vendor
          command: go mod vendor
      - run:
          name: vet
          command: go vet $(go list ./... | grep -v vendor/)
      - run:
          name: gofmt
          command: test -z "$(gofmt -s -l $(go list ./... | grep -v vendor/ | cut -f 4- -d '/'))"
      - run:
          name: ineffassign
          command: ineffassign .
  test:
    docker:
      - image: cimg/go:1.16.7
    working_directory: ~/go/src/github.com/u-root/u-bmc
    environment:
      - CGO_ENABLED: 0
    steps:
      - checkout
      - run:
          name: Install Task
          command: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin
      - run:
          name: Create test key
          command: |
            ssh-keygen -t rsa -b 4096 -C "testkey" -N "testpass" -f config/ssh_keys
            touch i_agree_to_the_acme_terms
            echo quanta-f06-leopard-ddr3 > TARGET
            task config:generate
      - run:
          name: Test all
          command: task test
      - run:
          name: Test coverage
          command: task coverage
  race:
    docker:
      - image: cimg/go:1.16.7
    working_directory: ~/go/src/github.com/u-root/u-bmc
    environment:
      - CGO_ENABLED: 1
    steps:
      - checkout
      - run:
          name: Install Task
          command: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin
      - run:
          name: Create test key
          command: |
            ssh-keygen -t rsa -b 4096 -C "testkey" -N "testpass" -f config/ssh_keys
            touch i_agree_to_the_acme_terms
            echo quanta-f06-leopard-ddr3 > TARGET
            task config:generate
      - run:
          name: Race detector
          command: task race
  compile:
    docker:
      - image: cimg/go:1.16.7
    working_directory: ~/go/src/github.com/u-root/u-bmc
    environment:
      - CGO_ENABLED: 0
    steps:
      - checkout
      - run:
          name: Install Task
          command: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin
      - run:
          name: Create test key
          command: |
            ssh-keygen -t rsa -b 4096 -C "testkey" -N "testpass" -f config/ssh_keys
            touch i_agree_to_the_acme_terms
            echo quanta-f06-leopard-ddr3 > TARGET
            task config:generate
      - run:
          name: build all commands
          command: |
            cd cmd
            go install -a ./...
            cd ../
            go install -a ./platform/quanta-f06-leopard-ddr3/cmd/uinit
  image:
    docker:
      - image: cimg/go:1.16.7
    working_directory: ~/go/src/github.com/u-root/u-bmc
    environment:
      - CGO_ENABLED: 0
    steps:
      - checkout
      - run:
          name: Install dependencies
          # Workaround for u-root only needed until proper modules support is in place
          command: |
            sudo apt-get update
            sudo apt-get install gcc-arm-none-eabi mtd-utils fakeroot flex bison device-tree-compiler bc libssl-dev zlib1g-dev libglib2.0-dev libpixman-1-dev unzip cpio patch libelf-dev qemu-kvm
            GO111MODULE=off go get github.com/u-root/u-root
            sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin
      - run:
          name: Create test key
          command: |
            ssh-keygen -t rsa -b 4096 -C "testkey" -N "testpass" -f config/ssh_keys
            touch i_agree_to_the_acme_terms
            echo quanta-f06-leopard-ddr3 > TARGET
      - run:
          name: Build image
          command: task build
      - store_artifacts:
          path: build/flash.img
          destination: flash.img
      - run:
          name: Run integration tests
          command: task integration
      - store_artifacts:
          path: integration/serial
      - run:
          name: Copy failed integration tests
          command: |
            mkdir /tmp/integration-data/
            tar -cvf /tmp/integration-data/integration.tar /tmp/ubmc-integration*/
          when: on_fail
      - store_artifacts:
          path: /tmp/integration-data/
