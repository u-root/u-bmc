version: 2
workflows:
  version: 2
  build_and_test:
    jobs:
      - clean-code
      - test:
          requires:
            - clean-code
      - race:
          requires:
            - clean-code
      - compile:
          requires:
            - clean-code
      - image:
          requires:
            - clean-code
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - compile
      - image
#TODO: Utilize CircleCI caching for at least the kernel tarball
jobs:
  clean-code:
    docker:
      - image: cimg/go:1.17.1
    working_directory: ~/go/src/github.com/u-root/u-bmc
    steps:
      - checkout
      - run:
          name: Install ineffassign
          command: go get github.com/gordonklaus/ineffassign
      - run:
          name: Install Task
          command: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin
      - run:
          name: Create test key
          command: |
            ssh-keygen -t rsa -b 4096 -C "testkey" -N "testpass" -f config/ssh_keys
            touch i_agree_to_the_acme_terms
            echo qemu-virt-a72 > TARGET
            task config:generate
      - run:
          name: vet
          command: go vet $(go list ./...)
      - run:
          name: gofmt
          command: test -z "$(gofmt -s -l $(go list ./... | cut -f 4- -d '/'))"
      - run:
          name: ineffassign
          command: ineffassign .
  test:
    docker:
      - image: cimg/go:1.17.1
    working_directory: ~/go/src/github.com/u-root/u-bmc
    steps:
      - checkout
      - run:
          name: Install Task
          command: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin
      - run:
          name: Create test key
          command: |
            ssh-keygen -t rsa -b 4096 -C "testkey" -N "testpass" -f config/ssh_keys
            touch i_agree_to_the_acme_terms
            echo qemu-virt-a72 > TARGET
            task config:generate
      - run:
          name: Test all
          command: task test
      - run:
          name: Test coverage
          command: task coverage
  race:
    docker:
      - image: cimg/go:1.17.1
    working_directory: ~/go/src/github.com/u-root/u-bmc
    steps:
      - checkout
      - run:
          name: Install Task
          command: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin
      - run:
          name: Create test key
          command: |
            ssh-keygen -t rsa -b 4096 -C "testkey" -N "testpass" -f config/ssh_keys
            touch i_agree_to_the_acme_terms
            echo qemu-virt-a72 > TARGET
            task config:generate
      - run:
          name: Race detector
          command: task race
  compile:
    docker:
      - image: cimg/go:1.17.1
    working_directory: ~/go/src/github.com/u-root/u-bmc
    steps:
      - checkout
      - run:
          name: Install Task
          command: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin
      - run:
          name: Create test key
          command: |
            ssh-keygen -t rsa -b 4096 -C "testkey" -N "testpass" -f config/ssh_keys
            touch i_agree_to_the_acme_terms
            echo qemu-virt-a72 > TARGET
            task config:generate
      - run:
          name: build all commands
          command: |
            cd cmd
            go install -a ./...
            cd ../
            go install -a ./platform/qemu-virt-a72/cmd/uinit
  image:
    docker:
      - image: cimg/go:1.17.1
    working_directory: ~/go/src/github.com/u-root/u-bmc
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            sudo apt update
            sudo apt install gcc-aarch64-linux-gnu fakeroot flex bison bc patch libssl-dev zlib1g-dev libelf-dev qemu-kvm
            GO111MODULE=off go get github.com/u-root/u-root
            sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin
      # Because the included version is too old and lacks the -U flag...
      - run:
          name: Compile erofs-utils
          command: |
            sudo apt install libtool liblz4-dev uuid-dev
            cd ~/
            curl -O https://git.kernel.org/pub/scm/linux/kernel/git/xiang/erofs-utils.git/snapshot/erofs-utils-1.3.tar.gz
            tar -xzf erofs-utils-1.3.tar.gz
            cd erofs-utils-1.3
            ./autogen.sh
            ./configure
            make
            sudo make install
            sudo ln -sf /usr/local/bin/mkfs.erofs /usr/bin/mkfs.erofs
      - run:
          name: Create test key
          command: |
            ssh-keygen -t rsa -b 4096 -C "testkey" -N "testpass" -f config/ssh_keys
            touch i_agree_to_the_acme_terms
            echo qemu-virt-a72 > TARGET
      - run:
          name: Build image
          command: task build
      - store_artifacts:
          path: build/img/rootfs.img
          destination: rootfs.img
      - store_artifacts:
          path: build/linux/zImage.boot
          destination: zImage.boot
      # - run:
      #     name: Run integration tests
      #     command: task integration
      # - store_artifacts:
      #     path: integration/serial
      # - run:
      #     name: Copy failed integration tests
      #     command: |
      #       mkdir /tmp/integration-data/
      #       tar -cvf /tmp/integration-data/integration.tar /tmp/ubmc-integration*/
      #     when: on_fail
      # - store_artifacts:
      #     path: /tmp/integration-data/
