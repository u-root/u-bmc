diff --git a/hw/arm/aspeed.c b/hw/arm/aspeed.c
index c565569..132863d 100644
--- a/hw/arm/aspeed.c
+++ b/hw/arm/aspeed.c
@@ -343,22 +343,18 @@ static void palmetto_bmc_i2c_init(AspeedBoardState *bmc)
 {
     AspeedSoCState *soc = &bmc->soc;
     DeviceState *dev;
-    uint8_t *eeprom_buf = g_malloc0(32 * 1024);
 
-    /* The palmetto platform expects a ds3231 RTC but a ds1338 is
-     * enough to provide basic RTC features. Alarms will be missing */
-    i2c_create_slave(aspeed_i2c_get_bus(DEVICE(&soc->i2c), 0), "ds1338", 0x68);
-
-    smbus_eeprom_init_one(aspeed_i2c_get_bus(DEVICE(&soc->i2c), 0), 0x50,
-                          eeprom_buf);
-
-    /* add a TMP423 temperature sensor */
-    dev = i2c_create_slave(aspeed_i2c_get_bus(DEVICE(&soc->i2c), 2),
-                           "tmp423", 0x4c);
+    /* add two TMP421 emperature sensors */
+    dev = i2c_create_slave(aspeed_i2c_get_bus(DEVICE(&soc->i2c), 6),
+                           "tmp421", 0x4e);
     object_property_set_int(OBJECT(dev), 31000, "temperature0", &error_abort);
     object_property_set_int(OBJECT(dev), 28000, "temperature1", &error_abort);
-    object_property_set_int(OBJECT(dev), 20000, "temperature2", &error_abort);
-    object_property_set_int(OBJECT(dev), 110000, "temperature3", &error_abort);
+
+    dev = i2c_create_slave(aspeed_i2c_get_bus(DEVICE(&soc->i2c), 6),
+                           "tmp421", 0x4f);
+    object_property_set_int(OBJECT(dev), 51000, "temperature0", &error_abort);
+    object_property_set_int(OBJECT(dev), 48000, "temperature1", &error_abort);
+
 }
 
 static void ast2500_evb_i2c_init(AspeedBoardState *bmc)
diff --git a/hw/arm/aspeed_soc.c b/hw/arm/aspeed_soc.c
index 93a247f..fc297d6 100644
--- a/hw/arm/aspeed_soc.c
+++ b/hw/arm/aspeed_soc.c
@@ -47,6 +47,9 @@ static const hwaddr aspeed_soc_ast2400_memmap[] = {
     [ASPEED_ETH1]   = 0x1E660000,
     [ASPEED_ETH2]   = 0x1E680000,
     [ASPEED_UART1]  = 0x1E783000,
+    [ASPEED_UART2]  = 0x1E78D000,
+    [ASPEED_UART3]  = 0x1E78E000,
+    [ASPEED_UART4]  = 0x1E78F000,
     [ASPEED_UART5]  = 0x1E784000,
     [ASPEED_VUART]  = 0x1E787000,
     [ASPEED_SDRAM]  = 0x40000000,
@@ -544,6 +547,27 @@ static void aspeed_soc_realize(DeviceState *dev, Error **errp)
                        uart1, 38400, serial_hd(2), DEVICE_LITTLE_ENDIAN);
     }
 
+    /* UART2 */
+    if (serial_hd(3)) {
+        qemu_irq uart2 = aspeed_soc_get_irq(s, ASPEED_UART2);
+        serial_mm_init(get_system_memory(), sc->info->memmap[ASPEED_UART2], 2,
+                       uart2, 38400, serial_hd(3), DEVICE_LITTLE_ENDIAN);
+    }
+
+    /* UART3 */
+    if (serial_hd(4)) {
+        qemu_irq uart3 = aspeed_soc_get_irq(s, ASPEED_UART3);
+        serial_mm_init(get_system_memory(), sc->info->memmap[ASPEED_UART3], 2,
+                       uart3, 38400, serial_hd(4), DEVICE_LITTLE_ENDIAN);
+    }
+
+    /* UART4 */
+    if (serial_hd(5)) {
+        qemu_irq uart4 = aspeed_soc_get_irq(s, ASPEED_UART4);
+        serial_mm_init(get_system_memory(), sc->info->memmap[ASPEED_UART4], 2,
+                       uart4, 38400, serial_hd(5), DEVICE_LITTLE_ENDIAN);
+    }
+
     /* I2C */
     object_property_set_bool(OBJECT(&s->i2c), true, "realized", &err);
     if (err) {
